##
# Virtual-environment management for python projects
# https://tox.wiki/en/latest/config.html
##
[tox]
skipsdist = True
usedevelop = True
recreate = False
allowlist_externals=make
[testenv:ssort]
description=Sorts the source code
setenv =
  {[testenv]setenv}
deps =
  ssort==0.11.6
commands =
  bash -x -c "env|grep TOX && ssort {toxinidir}/src"

[testenv]
allowlist_externals =
  bash
  make
  pytest
  ipython
deps =
  -e .[testing]
install_command=
  python -m pip install {packages}
setenv =
  PYNCHON_TOX_RUNTIME=True

# [testenv:docs-plan]
# description=Plan docs changes
# deps =
#   -e .[dev]
# setenv =
#   {[testenv]setenv}
# commands =
#   bash -x -c "env|grep TOX && pynchon plan"

# [testenv:docs]
# description=Generates fresh JSON-schemas
# setenv =
#   {[testenv]setenv}
# deps =
#   -e .[dev]
# commands =
#   bash -x -c "make docs/api"
#   passenv =

[testenv:docs]
description=
  This project + optional extras for docs, defering execution to make-target.
setenv =
  {[testenv]setenv}
deps = 
  -e .[docs]
  -e .[repl]
passenv =
  *
commands =
  bash -x -c "make {env:target:undefined}"
  
# [testenv:docs-build]
# description=Runs targets in venv
# setenv =
#   {[testenv]setenv}
# deps =
#   pynchon==2025.3.20.17.28
#   # pynchon @ git+https://github.com/robot-wranglers/pynchon@dev
# passenv =
#   *
# commands =
#   bash -x -c "make {env:target:flux.ok}"

# [testenv:docs.schema]
# description=Generates fresh JSON-schemas
# setenv =
#   {[testenv]setenv}
# deps =
#   -e .[dev]
# commands =
#   bash -x -c "make docs/schema/ISPL docs/schema/Simulation"

# [testenv:shell]
# description=Debugging shell for this project
# commands =
#   python -m hop shell
# deps =
#   IPython

[testenv:type-check]
description=
  Type checking for this project.  Informational; this is not enforced yet
recreate = False
env_dir={toxinidir}/../.tox/{env_name}
deps=
  #-e .[testing]
  mypy
commands =
  bash -x -c "\
    (mypy --install-types --non-interactive src/||true)"

[testenv:utest]
description=Unit tests
setenv =
  {[testenv]setenv}
  TEST_SUITE=units
commands =
  make self.units

[testenv:stest]
description=Smoke tests
allowlist_externals=make
setenv =
  {[testenv]setenv}
  TEST_SUITE=smoke
commands =
  make self.stest

[testenv:itest]
description=Integration tests
allowlist_externals=make
setenv =
  {[testenv]setenv}
  TEST_SUITE=integration
  # OPENAI_API_KEY = "ollama"  # Dummy key for Ollama
  # OPENAI_BASE_URL = {env:OPENAI_BASE_URL:http://localhost:11434/v1}
deps=
  # -e .[ai]
  ollama==0.4.7
  openai==1.99.9
  openai-agents==0.2.5
  pydantic-ai-slim[cli]
  pydantic-ai-slim[mcp]
  camel-ai==0.2.74
  -e .
commands =
  make self.itest 
  
# [testenv:cst]
# description = CST codegen
# deps =
#   libcst==0.4.9
# commands =
#   bash -x -c "\
#     python -m libcst.tool --version && \
#     python -m libcst.tool codemod \
#     remove_unused_imports.RemoveUnusedImportsCommand \
#     {toxinidir}/src || true; \
#     python -m libcst.tool codemod \
#     convert_format_to_fstring.ConvertFormatStringCommand \
#     {toxinidir}/src || true; \
#     python -m libcst.tool codemod \
#     convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandpython3 -m libcst.tool codemod convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand \
#     {toxinidir}/src || true;"

# https://docformatter.readthedocs.io/en/latest/usage.html
[testenv:normalize]
description = Normalizes code for this project
deps =
  shed==2023.5.1
  autopep8 #==1.7.0
  isort #==5.11.5
  docformatter==1.7.7
  ruff==0.12.9
commands =
  bash -x -c "make self.normalize"
  bash -x -c "\
    autopep8 --recursive --in-place {toxinidir}/tests; \
    isort --settings-file {toxinidir}/.isort.cfg {toxinidir}/tests;"

# https://interrogate.readthedocs.io/en/latest/
# https://docs.astral.sh/ruff/formatter/
[testenv:static-analysis]
description = Runs static-analysis tools
skip_install = True
recreate = False
deps =
	flake8==5.0.4
  vulture==2.6
  interrogate==1.7.0
commands =
  bash -x -c "make self.static-analysis"

[testenv:ruff]
description = Runs ruff
skip_install = True
recreate = False
deps =
commands =
  bash -x -c "ruff check src --fix"