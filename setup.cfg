# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = mcmas
description = Wrapper for the MCMAS model-checker and code-gen for ISPL
author = mvr
platforms = any
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/mattvonrocketstein/py-mcmas/
# Add here related links, for example:
project_urls =
    Documentation = https://github.com/mattvonrocketstein/py-mcmas
    Source = https://github.com/mattvonrocketstein/py-mcmas
    Download = https://github.com/mattvonrocketstein/py-mcmas#files

# https://pypi.org/classifiers/
classifiers =
    Programming Language :: Python

[options]
zip_safe = False
zip_ok = False
packages =
  find:
include_package_data = True
package_dir =
  =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    rich==14.0.0
    # templating
    Jinja2==3.1.2
    # containers 
    docker==7.1.0
    # data-schemas and agents 
    #   pydantic-ai==0.4.6
    # pydantic>=2.11
    # pydantic-ai==0.4.6
    pydantic-ai==0.7.2
    sympy==1.14.0
    # click==8.2.1
    click
    ipython==8.37.0
    lazy_imports==1.0.1

[options.packages.find]
where = src
exclude =
    tests
[options.extras_require]

# experimental
pymc=
    pyModelChecking @ git+https://github.com/albertocasagrande/pyModelChecking@v1.3_branch
     

# experimental
ai=
    ollama==0.4.7
    openai==1.99.9
    openai-agents==0.2.5
    pydantic-ai-slim[cli]
    pydantic-ai-slim[mcp]
    camel-ai==0.2.74
    # pydantic-ai-slim[openai]

# requirements for the repl
# installed via `pip install .[repl]`
# repl =
#     ipython
    # ipython==8.37.0

# requirements for the repl
# installed via `pip install .[repl]`
docs =
    %(testing)s
    pdoc==15.0.4
    mkdocs==1.5.3
    mkdocs-autorefs==1.0.1 
    mkdocs-redirects==1.2.2
    mkdocs-autolinks-plugin==0.7.1
    mkdocs-material==9.5.3 
    mkdocs-material-extensions==1.3.1 
    mkdocstrings==0.25.2 
    #pynchon @ git+https://github.com/robot-wranglers/pynchon@dev

# requirements for the repl
# installed via `pip install .[repl]`
dev =
    tox==4.6.4
    # python ast-dumper
    griffe>=1.3.2
    # %(repl)s

# docs-build =
#     mkdocs==1.5.3 
#     mkdocs-material==9.5.3 
#     mkdocs-material-extensions==1.3.1 
#     mkdocstrings==0.25.2 
    
# NB: This section is used by CI, via `make test`, which invokes tox.  See also `tox.ini`
# installed via `pip install .[testing]`
testing =
    %(dev)s
    pytest==8.4.1
    pytest-cov
    flake8==5.0.4
    pytest-mypy
    mypy
# NB: This section is used by CI, via `make static-analysis`.  See also `Makefile`
# Installed via `pip install .[lint]`.
lint =
    tox==4.6.4

# NB: This section is used by CI, via `make publish`.  See also `Makefile`
# installed via `pip install .[publish]`
publish =
    twine #==4.0.2

[options.package_data]
* = *.json

[options.entry_points]
console_scripts =
    mcmas = mcmas.bin:entry
    ispl = mcmas.bin:ispl_main

[tool:pytest]
addopts =
    --cov mcmas --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
python_files = *.py

[tool.mypy]
# Strict mode enables all strict checks
strict = true

# Additional strict settings
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
strict_concatenate = true

# Test-specific settings
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false  # Can be more lenient in tests if needed
